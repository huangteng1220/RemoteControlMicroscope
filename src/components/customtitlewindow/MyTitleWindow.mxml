<?xml version="1.0" encoding="utf-8"?>
<customtitlewindow:CustomTitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
									 xmlns:s="library://ns.adobe.com/flex/spark" 
									 xmlns:mx="library://ns.adobe.com/flex/mx"
									 xmlns:customtitlewindow="components.customtitlewindow.*" 
									 skinClass="components.customtitlewindow.skins.CustomTitleWindowSkin"
									  width="400" height="300"   cornerRadius="16"  
									  windowMoving="titleWin_windowMovingHandler(event);"
									  creationComplete="customtitlewindow1_creationCompleteHandler(event)"
									 >
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			
			import spark.components.BorderContainer;
			import spark.components.Button;
			import spark.events.TitleWindowBoundsEvent;
			
			internal function get main():RemoteControlMicroscope
			{
				return parentApplication as RemoteControlMicroscope;
			}
			
			private var _tile:BorderContainer;

			public function get tile():BorderContainer
			{
				return _tile;
			}

			public function set tile(value:BorderContainer):void
			{
				_tile = value;
			}

			protected function customtitlewindow1_closeHandler(event:CloseEvent):void
			{
				this.removeEventListener(CustomTitleWindowEvent.MIN,customtitlewindow1_minHandler);
				this.removeEventListener(CloseEvent.CLOSE,customtitlewindow1_closeHandler);
				this.removeAllElements();
				PopUpManager.removePopUp(this);
				tile.removeElement(bt);
				tile=null;
				bt=null;
                
				System.gc();

			}
			
			protected function customtitlewindow1_minHandler(event:CustomTitleWindowEvent):void
			{
				// TODO Auto-generated method stub
				this.setVisible(false);	
			}

			
			private function btHandler(evnt:MouseEvent):void{
				if(this.visible==false)
				{
					this.setVisible(true);
				}else{
					this.setVisible(false);
				}
			}
			private var bt:Button;
			protected function customtitlewindow1_creationCompleteHandler(event:FlexEvent):void
			{
				// TODO Auto-generated method stub

 				bt=new Button();
				bt.label=this.title;
				tile.addElement(bt);
								
				
				bt.addEventListener(MouseEvent.CLICK,btHandler,false,0,true);
				
				this.addEventListener(CustomTitleWindowEvent.MIN,customtitlewindow1_minHandler,false,0,true);
				this.addEventListener(CloseEvent.CLOSE,customtitlewindow1_closeHandler,false,0,true); 
			}

			protected function titleWin_windowMovingHandler(evt:TitleWindowBoundsEvent):void {
				if (evt.afterBounds.left < 0) {
					evt.afterBounds.left = 0;
				} else if (evt.afterBounds.right > systemManager.stage.stageWidth) {
					evt.afterBounds.left = systemManager.stage.stageWidth - evt.afterBounds.width;
				}
				if (evt.afterBounds.top < 0) {
					evt.afterBounds.top = 40;
				} else if (evt.afterBounds.bottom > systemManager.stage.stageHeight) {
					evt.afterBounds.top = systemManager.stage.stageHeight - evt.afterBounds.height;
				}
			}
		]]>
	</fx:Script>
</customtitlewindow:CustomTitleWindow>
